services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/init-user.sql:/docker-entrypoint-initdb.d/init-user.sql:ro
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      DB_NAME: fintrackbd
    depends_on:
      - db
    volumes:
      - ./backend:/app
    working_dir: /app
    command:
      - sh
      - -c
      - |
        echo '==> Czekam aż DB będzie gotowa…' &&
        until nc -z db 3306; do sleep 1; done &&
        echo '==> Wykonuję migracje…' &&
        python manage.py makemigrations --no-input &&
        python manage.py migrate --no-input &&
        echo '==> Ładuję fixture…' &&
        python manage.py loaddata initial_data.json &&
        echo '==> Migracje i dane załadowane.'

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: db
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - migrator
    command:
      [
        "gunicorn",
        "myproject.wsgi:application",
        "--bind", "0.0.0.0:8000",
        "--access-logfile", "-",
        "--access-logformat", "%(t)s \"%(r)s\" %(s)s %(b)s in %(L)s"
      ]

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  db_data:
